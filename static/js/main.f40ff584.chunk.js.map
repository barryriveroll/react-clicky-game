{"version":3,"sources":["components/CharacterCard/index.js","components/Score/index.js","components/Wrapper/index.js","components/CardWrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["styles","shuffle","CharacterCard","props","react_default","a","createElement","className","id","name","style","bg","onMouseOver","element","num","Math","floor","random","setAttribute","concat","addRotate","document","getElementById","onMouseOut","onClick","clicked","resetGame","addToScore","alt","src","image","Score","Fragment","score","filter","highScore","Wrapper","children","row","width","margin","position","transition","CardWrapper","Title","App","state","cards","restart","_this","displayGameText","map","card","setState","array","temporaryValue","randomIndex","currentIndex","length","shuffleCardAnimation","forEach","clearInterval","setTimeout","x","interval","setInterval","left","_this2","this","components_Wrapper","components_Title","components_Score","components_CardWrapper","components_CharacterCard","key","occupation","location","Component","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.f40ff584.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst styles = {\n  shuffle: {\n    // top: \"30%\",\n    // left: \"50%\"\n  }\n};\n\nfunction CharacterCard(props) {\n  return (\n    <div\n      className=\"card\"\n      id={props.name}\n      style={props.shuffle ? styles.shuffle : {}}\n    >\n      <div\n        className={\"img-container bg-\" + props.bg}\n        onMouseOver={() => addRotate(document.getElementById(props.name))}\n        onMouseOut={() => resetRotate(document.getElementById(props.name))}\n        onClick={\n          props.clicked ? props.resetGame : () => props.addToScore(props.id)\n        }\n      >\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nfunction addRotate(element) {\n  let num = Math.floor(Math.random() * 6) + 1;\n  num *= Math.floor(Math.random() * 2) === 1 ? 1 : -1;\n  element.setAttribute(\"style\", `transform: rotate(${num}deg) scale(1.2)`);\n}\n\nfunction resetRotate(element) {\n  element.setAttribute(\"style\", \"transform: rotate(0deg)\");\n}\n\nexport default CharacterCard;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Score(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"score col-md-12\">\r\n        <p className=\"current-score\">\r\n          Current Score: {props.score}{\" \"}\r\n          <span style={{ filter: \"opacity(0)\" }} id=\"correct\">\r\n            CORRECT!\r\n          </span>\r\n        </p>\r\n        <p className=\"high-score\">\r\n          <span style={{ filter: \"opacity(0)\" }} id=\"incorrect\">\r\n            INCORRECT!\r\n          </span>{\" \"}\r\n          High Score: {props.highScore}\r\n        </p>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">{props.children}</div>\n    </div>\n  );\n}\n\nexport default Wrapper;\n","import React from \"react\";\r\n\r\nconst styles = {\r\n  row: {\r\n    width: 928,\r\n    margin: \"0 auto\",\r\n    position: \"relative\",\r\n    transition: \"left 0.1s\"\r\n  }\r\n};\r\n\r\nfunction CardWrapper(props) {\r\n  return (\r\n    <div style={styles.row} id=\"card-wrapper\" className=\"row\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardWrapper;\r\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n    <header>\n      <img\n        className=\"logo\"\n        alt=\"Futurama logo\"\n        src=\"./images/futuramaLogo.png\"\n      />\n      <img className=\"ship\" alt=\"Futurama ship\" src=\"./images/ship.png\" />\n      <h1 className=\"title\">CLICKY GAME</h1>\n      <p>\n        Click a character to get a point! Be careful though, if you click a\n        character you already clicked, you lose!\n      </p>\n    </header>\n  );\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Score from \"./components/Score\";\nimport Wrapper from \"./components/Wrapper\";\nimport CardWrapper from \"./components/CardWrapper\";\nimport Title from \"./components/Title\";\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n  state = {\n    cards,\n    score: 0,\n    highScore: 0,\n    restart: false\n  };\n\n  addToScore = id => {\n    this.displayGameText(\"correct\");\n    this.state.cards.map(card => {\n      if (card.id === id) card.clicked = true;\n    });\n\n    this.setState({\n      cards: this.shuffle(this.state.cards),\n      score: this.state.score + 1,\n      highScore:\n        this.state.score + 1 > this.state.highScore\n          ? this.state.score + 1\n          : this.state.highScore\n    });\n  };\n\n  displayGameText(id) {\n    clearInterval();\n    document.getElementById(id).style.filter = \"opacity(1)\";\n    setTimeout(() => {\n      document.getElementById(id).style.filter = \"opacity(0)\";\n    }, 1000);\n\n    if (id === \"incorrect\") {\n      let x = 10;\n\n      let interval = setInterval(function() {\n        document.getElementById(\"card-wrapper\").style.left = x + \"px\";\n        x *= -1;\n        x--;\n        if (x < 0) {\n          clearInterval(interval);\n        }\n      }, 100);\n    }\n  }\n\n  shuffle = array => {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  shuffleCardAnimation = () => {\n    //\n  };\n\n  resetGame = () => {\n    this.displayGameText(\"incorrect\");\n    this.state.cards.forEach(card => (card.clicked = false));\n    this.setState({\n      cards: this.shuffle(this.state.cards),\n      score: 0,\n      restart: true\n    });\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Title>Friends List</Title>\n        <Score score={this.state.score} highScore={this.state.highScore} />\n        <CardWrapper>\n          {this.state.cards.map(card => (\n            <CharacterCard\n              bg={Math.floor(Math.random() * 4) + 1}\n              shuffle={this.state.restart}\n              key={card.id}\n              addToScore={this.addToScore}\n              resetGame={this.resetGame}\n              clicked={card.clicked}\n              id={card.id}\n              name={card.name}\n              image={card.image}\n              occupation={card.occupation}\n              location={card.location}\n            />\n          ))}\n        </CardWrapper>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}